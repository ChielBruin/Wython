module SimpleStatement_syntax

imports
  
  Common
  ID_syntax
  Expression_syntax
  Import_syntax
  Parameters_syntax
  Test_syntax
  
sorts

  SimpleStatement

context-free start-symbols

  SimpleStatement

context-free syntax

  SimpleStatement.SimpleStatement = SmallStatement SmallStatementList* Semicolon? NewLine

  SmallStatement.Expression = 
  SmallStatement.Delete = "del" ExpressionList
  SmallStatement.Pass = "pass"
  SmallStatement.Break = "break"
  SmallStatement.Continue = "continue"
  SmallStatement.Return = "return" TestList?
  SmallStatement.Yield = YieldExpression
  SmallStatement.Raise = "raise" RaiseArguments?
  SmallStatement.ImportName = "import" DottedAsNames
  SmallStatement.ImportFrom = "from" ImportFromArgs "import" ImportItems
  SmallStatement.Global = "global" ID IDList*
  SmallStatement.NonLocal = "nonlocal" ID IDList*
  SmallStatement.Assert = "assert" Test TestNode?
  
  IDList.Node = "," ID

  DottedAsNames.Names = DottedAsName DottedAsNameList*

  DottedAsNameList.Node = "," DottedAsName
  
  DottedAsName.AsName = DottedName AsArgument?

  DottedName.Name = ID DottedNameList*

  DottedNameList.Node = "." ID

  AsArgument.As = "as" ID
  
  IDList.IDList = "," ID

  Dots.Dot = "."
  Dots.Dots = "..."

  ImportFromArgs.DottedName = Dots* DottedName
  ImportFromArgs.JustDots = Dots+

  ImportItems.All = "*"
  ImportItems.Bracketed = "(" ImportAsNames ")" 
  ImportItems.Normal = ImportAsNames 
  
  ImportAsNames.ImportAsNames = ID ImportAsNamesParam?
  ImportAsNamesParam.Param = "as" ID
  
  RaiseArguments.RaiseArgs = Test TestArguments?
  TestArguments.TestArgs = "from" Test
  
  YieldExpression.Yield = "yield" YieldArguments?

  YieldArguments.Test = "from" Test
  YieldArguments.TestList = TestList

  SmallStatementList.Node = Semicolon SmallStatement
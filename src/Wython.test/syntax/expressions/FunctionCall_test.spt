module Expression_test

language Wython

start symbol Exp

/*
 * Function calls
 */
 
test FUN invalid name   [[12()]]                parse fails
test FUN no args        [[func()]]              parse succeeds

test FUN int arg        [[func(12)]]            parse succeeds
test FUN int args       [[func(12, 42)]]        parse succeeds

test FUN bool arg       [[func(True)]]          parse succeeds
test FUN bool args      [[func(True, False)]]   parse succeeds

test FUN string arg     [[func("a")]]           parse succeeds
test FUN string args    [[func("a", "b")]]      parse succeeds

test FUN ID arg         [[func(a)]]             parse succeeds
test FUN ID args        [[func(a, b)]]          parse succeeds

test FUN mixed args 1   [[func(a, 12)]]         parse succeeds
test FUN mixed args 2   [[func(12, True)]]      parse succeeds
test FUN mixed args 3   [[func(true, False)]]   parse succeeds
test FUN mixed args 4   [[func("12", 1.2)]]     parse succeeds

test FUN nested         [[func(func2())]]       parse succeeds
test FUN composite      [[func(1+1, 3*2)]]      parse succeeds


test FUN only comma     [[func(,)]]          parse fails
test FUN extra comma 1  [[func(, 12)]]       parse fails
test FUN extra comma 2  [[func(12,)]]        parse succeeds
test FUN no comma       [[func(12 13)]]      parse fails

test FUN layout 1       [[func(0,1)]]        parse succeeds
test FUN layout 2       [[func(0 , 1)]]      parse succeeds


/*
 * Function application on object
 */
 
test FUN normal case 0 args     [[ id.function() ]]             parse succeeds
test FUN normal case 1 args     [[ id.function(1) ]]            parse succeeds
test FUN normal case 2 args     [[ id.function(1, 2) ]]         parse succeeds
test FUN normal case 3 args     [[ id.function(1, 2, 3) ]]      parse succeeds
test FUN complex args           [[ id.function(1+1) ]]          parse succeeds
test FUN non identifier         [[ id.1(1, 2, 3) ]]             parse fails
test FUN trailing comma         [[ id.fun(1, 2,) ]]             parse succeeds
test FUN space separated        [[ id.fun(1 2 3) ]]             parse fails
test FUN missing second bracket [[ id.function(1, 2, 3 ]]       parse fails
test FUN missing first bracket  [[ id.function 1, 2, 3) ]]      parse fails
test FUN method call as arg     [[ id.fun(id.fun(2))]]          parse succeeds